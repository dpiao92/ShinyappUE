library(stringr)
library(shiny)

claiminfo2 <-read.csv("X:/Actuarial/Claims_Project/Claims_DTM_PDOX.csv")
claiminfo2$LOSSDATE<-as.Date(claiminfo2[,"LOSSDATE"],"%m/%d/%y")

ui<-fluidPage(
    textInput(inputId = "words1",
              label = "Enter search terms, separated by commas", 
              value = "sexual,assault"),
    
    sidebarLayout(
        sidebarPanel(
            dateRangeInput("dates", label = h3("Date range"), start = Sys.Date()-1825, end = Sys.Date(), format = "mm/dd/yy"),
            
            hr(),
            
            checkboxGroupInput("checkbox", label = "Line of Business", 
                               c("ELL" = "ELL","CGL"="CGL","CGX"="CGX","BLX"="BLX","GLU"="GLU","GLX"="GLX"),inline = TRUE),
            downloadButton('downloadData', 'Download')
        ),
        mainPanel(
            tabsetPanel(type = "tabs", 
                        tabPanel("List of Claims", dataTableOutput(outputId = "table")), 
                        tabPanel("Plot", plotOutput("plot"))
            )
        )
    )
)
server<-function(input,output){
    datasetInput <- reactive({
        words2 <- unlist(str_split(input$words1,","))
        if(input$words1 == "")
        for (i in 1:length(words2)) {
        trimwords <- str_trim(words2[i])
        words2[i] <- trimwords
        }
        if(words2[[1]] == "")
        {claiminfo2
            claiminfo3 <- claiminfo2[,c(1,652,654,656,659)]
            claiminfo4 <- subset(claiminfo3,claiminfo3[,"LOSSDATE"]>=input$dates[1] & claiminfo3[,"LOSSDATE"]<=input$dates[2])}
        else
        { if(length(words2)==1)
        { claiminfo2$xxtotal <- rowsum(claiminfo2[, c(words2)],claiminfo2$Category)
        claiminfo3 <- claiminfo2[,c(1,652,654,656,659,length(claiminfo2))]
        claiminfo4 <- subset(claiminfo3,claiminfo3[,"xxtotal"] >0 & claiminfo3[,"LOSSDATE"]>=input$dates[1] & claiminfo3[,"LOSSDATE"]<=input$dates[2])}
            
        if(length(words2)>1)
        {claiminfo2$xxtotal <-rowSums(claiminfo2[,c(words2)])
        claiminfo3 <- claiminfo2[,c(1,652,654,656,659,length(claiminfo2))]
        claiminfo4 <- subset(claiminfo3,claiminfo3[,"xxtotal"] >0 & claiminfo3[,"LOSSDATE"]>=input$dates[1] & claiminfo3[,"LOSSDATE"]<=input$dates[2])}
        claiminfo4
    }
  })


    output$table <- renderDataTable({
            datasetInput()
        })
    output$plot <- renderPlot({
        claiminfo4 <- datasetInput()
        counts <- table(as.numeric(format(claiminfo4[,"LOSSDATE"], "%Y")))
        barplot(counts, main="Claims by Year", 
                xlab="Loss Year")
    })
    
    output$downloadData <- downloadHandler({
        if(length(strsplit(input$words1,",")[[1]])==1)
        {claiminfo2$xxtotal <- rowsum(claiminfo2[, strsplit(input$words1, ",")[[1]]],claiminfo2$Category)}
        else {claiminfo2$xxtotal <-rowSums(claiminfo2[,strsplit(input$words1,",")[[1]]])}
        
        claiminfo3 <- claiminfo2[,c(1,652,654,656,659,length(claiminfo2))]
        claiminfo4 <- subset(claiminfo3,claiminfo3[,"xxtotal"] >0 & claiminfo3[,"LOSSDATE"]>=input$dates[1] & claiminfo3[,"LOSSDATE"]<=input$dates[2])
        
        content = function() {
            write.csv(claiminfo4, "M:/Claims/Testing.csv")
        }
    })    
}
shinyApp(ui = ui, server = server)




#test

