library(stringr)
library(shiny)


claiminfo2$LOSSDATE<-as.Date(claiminfo2[,"LOSSDATE"],"%m/%d/%y")
claiminfo2$LIMIT<-paste("$",format(claiminfo2$LIMIT, big.mark=","),sep="")
claiminfo2$RETENTION<-paste("$",format(claiminfo2$RETENTION, big.mark=","),sep="")
claiminfo2$TOTALINCURRED<-paste("$",format(claiminfo2$TOTALINCURRED, big.mark=","),sep="")

ui<-fluidPage(
    
    selectizeInput(inputId = "words1",
                   label = "Enter search terms, separated by commas",choices = colnames(claiminfo2[,2:length(claiminfo2)]), 
                   multiple = TRUE
    ),
    
    sidebarLayout(
        sidebarPanel(
            dateRangeInput("dates", label = h3("Date range"), start = "01-01-2010", end = "12-31-2014", format = "mm/dd/yy"),
            
            hr(),
            
            checkboxGroupInput("checkbox", label = "Line of Business", 
                               c("ELL" = "ELL","CGL"="CGL","CGX"="CGX","BLX"="BLX","GLU"="GLU","GLX"="GLX"),selected = c("ELL","CGL","CGX","BLX","GLU","GLX"),inline = TRUE),
            downloadButton('downloadData', 'Download')
        ),
        mainPanel(
            tabsetPanel(type = "tabs", 
                        tabPanel("List of Claims", dataTableOutput(outputId = "table")), 
                        tabPanel("Plot", plotOutput("plot"))
            )
        )
    )
)
server<-function(input,output){
    datasetInput <- reactive({
        words2 <- unlist(str_split(input$words1,","))
        lob <- unlist(str_split(input$checkbox,","))
        
        for (i in 1:length(words2)) {
            trimwords <- str_trim(words2[i])
            words2[i] <- trimwords
        }
        if(length(words2) == 0)
        {claiminfo2
            claiminfo3 <- claiminfo2[,c(1,652,654,656,659,662:665)]
            claiminfo4 <- subset(claiminfo3,claiminfo3[,"LOSSDATE"]>=input$dates[1] & claiminfo3[,"LOSSDATE"]<=input$dates[2]& claiminfo3[,"LINEOFBUSINESS"] %in% c(input$checkbox))
            claiminfo4}
        else if (length(words2)==1)
        { claiminfo2$xxtotal <- rowsum(claiminfo2[, c(words2)],claiminfo2$Category)
        claiminfo3 <- claiminfo2[,c(1,652,654,656,659,662:665,length(claiminfo2))]
        claiminfo4 <- subset(claiminfo3,claiminfo3[,"xxtotal"] >0 & claiminfo3[,"LOSSDATE"]>=input$dates[1] & claiminfo3[,"LOSSDATE"]<=input$dates[2] & claiminfo3[,"LINEOFBUSINESS"] %in% c(input$checkbox))
        
        claiminfo4}
        else
        {claiminfo2$xxtotal <-rowSums(claiminfo2[,c(words2)])
        claiminfo3 <- claiminfo2[,c(1,652,654,656,659,662:665,length(claiminfo2))]
        claiminfo4 <- subset(claiminfo3,claiminfo3[,"xxtotal"] >0 & claiminfo3[,"LOSSDATE"]>=input$dates[1] & claiminfo3[,"LOSSDATE"]<=input$dates[2] & claiminfo3[,"LINEOFBUSINESS"] %in% c(input$checkbox))
        claiminfo4}
    })
    
    
    output$table <- renderDataTable({
        claiminfo<-datasetInput()
        names(claiminfo)[c(1,3,4,5,6:9)] <- c("Claim Number","Line of Business","Loss Date","Total Incurred", "Limit", "Retention", "Institution Code", "Incident or Claim")
        claiminfo
    })
    output$plot <- renderPlot({
        claiminfo4 <- datasetInput()
        counts <- table(as.numeric(format(claiminfo4[,"LOSSDATE"], "%Y")))
        barplot(counts, main="Claims by Year", 
                xlab="Loss Year")
    })
    
    output$downloadData <- downloadHandler(
        filename = function() {
            paste('data_', Sys.Date(), '.csv', sep='')
        },
        content = function(file) {
            write.csv(datasetInput(), file)
        }
    )    
}
shinyApp(ui = ui, server = server)